[project]
name = "scraper"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "hydra-core>=1.3.2",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "selenium>=4.29.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.11.1",
]


[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
# Enable all rules by default, then configure specific ones
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "B",    # flake8-bugbear
    "C",    # flake8-comprehensions
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "S",    # flake8-bandit
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "DJ",   # flake8-django
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "TRY",  # tryceratops
    "RUF",  # Ruff-specific rules
]

ignore = [
    "E722",      # Bare except
    "ANN401",    # Dynamically typed expressions (typing.Any) are disallowed
    "S101",      # Use of assert detected
    "PLR0913",   # Too many arguments to function call
    "PLR2004",   # Magic number used in comparison
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10
max-statements = 50

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "PLR2004"]
